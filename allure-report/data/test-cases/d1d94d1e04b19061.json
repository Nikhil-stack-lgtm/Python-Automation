{"uid":"d1d94d1e04b19061","name":"test_add_user","fullName":"seleniumbasicspytest.webautomation_test#test_add_user","historyId":"11f8f93658347bb46a47a4b1314bc9cb","time":{"start":1732856851418,"stop":1732856876576,"duration":25158},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='org_id']\"}\n  (Session info: chrome=131.0.6778.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x007133E3+25059]\n\t(No symbol) [0x0069CDE4]\n\t(No symbol) [0x0057BEC3]\n\t(No symbol) [0x005BFD86]\n\t(No symbol) [0x005BFFCB]\n\t(No symbol) [0x005FD952]\n\t(No symbol) [0x005E1F44]\n\t(No symbol) [0x005FB51E]\n\t(No symbol) [0x005E1C96]\n\t(No symbol) [0x005B3FAC]\n\t(No symbol) [0x005B4F3D]\n\tGetHandleVerifier [0x00A05543+3113795]\n\tGetHandleVerifier [0x00A1A20A+3198986]\n\tGetHandleVerifier [0x00A129E2+3168226]\n\tGetHandleVerifier [0x007B3250+680016]\n\t(No symbol) [0x006A572D]\n\t(No symbol) [0x006A29D8]\n\t(No symbol) [0x006A2B75]\n\t(No symbol) [0x006957D0]\n\tBaseThreadInitThunk [0x7714FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7786809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7786806E+238]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"084e106973089df5615c945ed8d3de2e\")>\nconfig = <configparser.ConfigParser object at 0x00000292A8F71370>\n\n    def test_add_user(driver, config):\n        # Load configuration\n        # config = ConfigParser()\n        # config.read('config.ini')\n    \n        # Retrieve URL from config\n        url = config.get('detail', 'url')\n        driver.maximize_window()\n        orgid = config.get('detail', 'orgid')\n        email = config.get('detail', 'email')\n        password = config.get('detail', 'password')\n        adduser = config.get('detail', 'adduser')\n        driver.get(url)\n        time.sleep(5)\n    \n        # Input organization ID\n        sleep(10)\n>       driver.find_element(By.XPATH, \"//input[@id='org_id']\").send_keys(orgid)\n\nseleniumbasicspytest\\webautomation_test.py:388: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000292A8F71100>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7786809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7786806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='org_id']\"}\nE         (Session info: chrome=131.0.6778.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x007133E3+25059]\nE       \t(No symbol) [0x0069CDE4]\nE       \t(No symbol) [0x0057BEC3]\nE       \t(No symbol) [0x005BFD86]\nE       \t(No symbol) [0x005BFFCB]\nE       \t(No symbol) [0x005FD952]\nE       \t(No symbol) [0x005E1F44]\nE       \t(No symbol) [0x005FB51E]\nE       \t(No symbol) [0x005E1C96]\nE       \t(No symbol) [0x005B3FAC]\nE       \t(No symbol) [0x005B4F3D]\nE       \tGetHandleVerifier [0x00A05543+3113795]\nE       \tGetHandleVerifier [0x00A1A20A+3198986]\nE       \tGetHandleVerifier [0x00A129E2+3168226]\nE       \tGetHandleVerifier [0x007B3250+680016]\nE       \t(No symbol) [0x006A572D]\nE       \t(No symbol) [0x006A29D8]\nE       \t(No symbol) [0x006A2B75]\nE       \t(No symbol) [0x006957D0]\nE       \tBaseThreadInitThunk [0x7714FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7786809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7786806E+238]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1732856632329,"stop":1732856635329,"duration":3000},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"config","time":{"start":1732856635329,"stop":1732856635333,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"driver::0","time":{"start":1732856876660,"stop":1732856878890,"duration":2230},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"seleniumbasicspytest"},{"name":"suite","value":"webautomation_test"},{"name":"host","value":"DESKTOP-1L8REDS"},{"name":"thread","value":"3692-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"seleniumbasicspytest.webautomation_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d1d94d1e04b19061.json","parameterValues":[]}